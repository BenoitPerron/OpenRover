#!/bin/bash

echo ""
echo "Installing OpenCV."
pwd=`pwd`

# Show CPU info
lscpu
cat /proc/cpuinfo 

# Create swapfile
if [ ! -f /swapfile ]; then
	sudo dd if=/dev/zero of=/swapfile bs=512M count=1
	sudo chmod 600 /swapfile
	sudo mkswap /swapfile
	sudo swapon /swapfile
fi

# Install requirements for OpenCV
sudo apt-get install -y unzip
sudo apt-get install -y libjpeg-dev libtiff5-dev libjasper-dev libpng12-dev
sudo apt-get install -y libavcodec-dev libavformat-dev libswscale-dev libv4l-dev
sudo apt-get install -y libxvidcore-dev libx264-dev
sudo apt-get install -y libgtk2.0-dev
sudo apt-get install -y libatlas-base-dev gfortran
sudo apt-get install -y python2.7-dev python3-dev
#sudo apt-get install -y libtbb-dev 
#sudo apt-get install -y libqt4-dev libgtk2.0-dev

# Add virtualenv
if [ ! -f /usr/local/bin/virtualenvwrapper.sh ]; then
        # Install virtualenv
        sudo pip3 install virtualenv virtualenvwrapper

	# Add to .bashrc
	echo 'export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3' >> ~/.bashrc
	echo 'export WORKON_HOME=$HOME/.virtualenv' >> ~/.bashrc
	echo 'source /usr/local/bin/virtualenvwrapper.sh' >> ~/.bashrc

	# Run virtualenv
	source ~/.bashrc
	mkvirtualenv py3
	workon py3

	# Install numpy in py3
	sudo pip install --upgrade pip
	pip install numpy
fi
workon py3

# Get OpenCV
if [ ! -d opencv-3.0.0 ]; then
	wget -O opencv.zip https://github.com/opencv/opencv/archive/3.0.0.zip
	unzip opencv.zip
	wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/3.0.0.zip
	unzip opencv_contrib
fi

# Get x264
if [ ! -d x264* ]; then
	wget ftp://ftp.videolan.org/pub/videolan/x264/snapshots/last_stable_x264.tar.bz2 -O x264.tar.bz2
	tar xvfj x264.tar.bz2
	cd x264*
	./configure --enable-shared --enable-pic
	make
	sudo make install
	cd $pwd
fi

# FFMpeg
if [ ! -d ffmpeg ]; then
	git clone https://git.ffmpeg.org/ffmpeg.git ffmpeg
	cd ffmpeg
	 ./configure --enable-gpl --enable-libx264 --enable-libxvid --enable-nonfree --enable-postproc --enable-version3 --enable-shared --enable-pic
	make
	sudo make install
	cd $pwd
fi

# Build OpenCV
cd opencv-3.0.0/
mkdir build
cd build
cmake 	-D CMAKE_BUILD_TYPE=RELEASE \
	-D CMAKE_INSTALL_PREFIX=/usr/local \
	-D BUILD_EXAMPLES=OFF \
	-D INSTALL_C_EXAMPLES=OFF \
	-D INSTALL_PYTHON_EXAMPLES=OFF \
	-D ENABLE_NEON=ON \
	-D ENABLE_VFPV3=ON \
	-D WITH_CUBLAS=ON \
	-D WITH_FFMPEG=OFF \
	-D WITH_CUFFT=ON \
	-D WITH_OPENCL=ON \
	-D WITH_EIGEN=ON \
	-D WITH_OPENGL=ON \
	-D WITH_QT=OFF \
	-D WITH_V4L=ON \
	-D WITH_VTK=ON \
	-D WITH_OPENGL=ON \
	-D WITH_TBB=ON \
	-D BUILD_NEW_PYTHON_SUPPORT=ON \
	-D OPENCV_EXTRA_MODULES_PATH=$pwd/opencv_contrib-3.0.0/modules \
	-D PYTHON_EXECUTABLE=/home/pi/.virtualenv/py3/bin/python3 \
	..

# Some more build flags to try:
#      -D BUILD_JPEG=ON \
#      -D BUILD_SHARED_LIBS=ON \
#      -D BUILD_STATIC_LIBS=ON \
#      -D BUILD_DOCS=ON BUILD_TESTS=ON 

# Build
make  -j4
#make -j8
sudo make install
sudo ldconfig

# Copy object into py3 env
if [ -f /usr/local/lib/python3.5/dist-packages/cv2.cpython-35m-arm-linux-gnueabihf.so ]; then
       ln -sf /usr/local/lib/python3.5/dist-packages/cv2.cpython-35m-arm-linux-gnueabihf.so ~/.virtualenv/py3/lib/python3.5/site-packages/cv2.so
elif [ -f /usr/local/lib/python3.4/site-packages/cv2.cpython-34m.so ]; then 
       ln -sf /usr/local/lib/python3.4/site-packages/cv2.cpython-34m.so ~/.virtualenv/py3/lib/python3.4/site-packages/cv2.so
fi

# Done
python3 -c "import cv2"
echo "It is done."

